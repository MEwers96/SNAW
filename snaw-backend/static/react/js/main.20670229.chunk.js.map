{"version":3,"sources":["img/AnthroClassifyRainforest.png","img/SmallClassifyRainforest.png","img/ExpandedClassifyRainforest.png","img/rainforest_specto.png","img/logo_small.png","components/AnalyzeButton.js","components/UploadButton.js","App.js","Results.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","button","color","fontSize","backgroundColor","margin","spacing","paddingLeft","paddingRight","background","UploadButton","classes","htmlFor","to","style","textDecoration","Button","variant","className","input","display","accept","id","multiple","type","component","App","randomNum","Math","floor","random","spectroImg","Image","analysisImg","src","window","logo","alt","token","array","root","width","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","Results","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","AppBar","position","Toolbar","Typography","title","Container","fixed","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Paper","CardMedia","image","Spectrogram","SvmSmallResults","SvmExpandedResults","SvmAnthroResults","SvmGeoResults","Boolean","location","hostname","match","routing","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.20670229.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/AnthroClassifyRainforest.1f13aa3f.png\";","module.exports = __webpack_public_path__ + \"media/SmallClassifyRainforest.14444155.png\";","module.exports = __webpack_public_path__ + \"media/ExpandedClassifyRainforest.8090d887.png\";","module.exports = __webpack_public_path__ + \"media/rainforest_specto.17942d01.png\";","module.exports = __webpack_public_path__ + \"media/logo_small.7e1954b4.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    color: 'white',\r\n    fontSize: '1em',\r\n    backgroundColor: '#3f5a14',\r\n    margin: theme.spacing(1),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n    '&:hover': {\r\n      background: '#2e420e',\r\n   },\r\n  },\r\n}));\r\n\r\nexport default function UploadButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        <label htmlFor=\"outlined-button-file\">\r\n        <Link to=\"/results\" style={{ textDecoration: 'none' }}>\r\n          <Button variant=\"contained\" className={classes.button}>\r\n            Analyze Audio\r\n          </Button>\r\n          </Link>\r\n        </label>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function UploadButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        <input\r\n            accept=\"audio/wav\"\r\n            className={classes.input}\r\n            id=\"outlined-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n        />\r\n        <label htmlFor=\"outlined-button-file\">\r\n            <Button variant=\"outlined\" component=\"span\" className={classes.button}>\r\n              Upload WAV File/s\r\n            </Button>\r\n        </label>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport logo from './img/logo_small.png';\r\nimport './App.css';\r\nimport AnalyzeButton from './components/AnalyzeButton';\r\nimport UploadButton from './components/UploadButton';\r\n\r\nfunction App() {\r\n\r\n  var randomNum = Math.floor(Math.random() * 5);\r\n  var spectroImg = new Image();\r\n  var analysisImg = new Image();\r\n  spectroImg.src = 'data:image/png;base64,'+window.spectroImg;\r\n  analysisImg.src = 'data:image/png;base64,'+window.analysisImg;\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>Token received from Backend = {window.token}</p>\r\n        <p>Test information array [1, 2, 3, 4, 5]  at position {randomNum} = {window.array[randomNum]}</p>\r\n        <p> Spectrogram: </p>\r\n        <p> <img src={spectroImg.src}/></p>\r\n        <p> CityNet Analysis </p>\r\n        <p> <img src = {analysisImg.src}/></p>\r\n         <p> <b>Soundscape Noise Analysis Workbench</b></p>\r\n        <br/>\r\n        <div> \r\n          Drag and drop WAV files here, or click the Upload button to select file/s.\r\n          <UploadButton/>\r\n          <br/><br/>\r\n        </div>\r\n        <div> \r\n          <AnalyzeButton/>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport SvmSmallResults from './img/SmallClassifyRainforest.png';\r\nimport SvmExpandedResults from './img/ExpandedClassifyRainforest.png';\r\nimport SvmAnthroResults from './img/AnthroClassifyRainforest.png';\r\nimport SvmGeoResults from './img/AnthroClassifyRainforest.png';\r\nimport Spectrogram from './img/rainforest_specto.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Results() {\r\nconst classes = useStyles();\r\nconst [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\nreturn (\r\n<div className=\"App\">\r\n    <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <Typography variant='h6' className={classes.title}>Soundscape Noise Analysis Workbench</Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n\r\n    <Container>\r\n        <br/>\r\n        <Typography variant=\"h3\" component=\"h1\">Results of Analysis</Typography>\r\n        <br/>\r\n        <Container fixed>\r\n            <ExpansionPanel expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Typography className={classes.heading}>Results of</Typography>\r\n                    <Typography className={classes.secondaryHeading}>rainforest-sc.wav</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>Spectrogram</Typography>\r\n                        <CardMedia component='img' image={Spectrogram} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Small Class</Typography>\r\n                        <CardMedia component='img' image={SvmSmallResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Expanded Class</Typography>\r\n                        <CardMedia component='img' image={SvmExpandedResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from an Extended 28 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Anthrophony Binary Class</Typography>\r\n                        <CardMedia component='img' image={SvmAnthroResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Geophony Binary Class</Typography>\r\n                        <CardMedia component='img' image={SvmGeoResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Typography className={classes.heading}>Results of</Typography>\r\n                    <Typography className={classes.secondaryHeading}>nature-sc.wav</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>Spectrogram</Typography>\r\n                        <CardMedia component='img' image={Spectrogram} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Small Class</Typography>\r\n                        <CardMedia component='img' image={SvmSmallResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Expanded Class</Typography>\r\n                        <CardMedia component='img' image={SvmExpandedResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from an Extended 28 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Anthrophony Binary Class</Typography>\r\n                        <CardMedia component='img' image={SvmAnthroResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Geophony Binary Class</Typography>\r\n                        <CardMedia component='img' image={SvmGeoResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Container>\r\n    </Container>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Results;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Results from './Results';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst routing = (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route exact path=\"/results\" component={Results} />\r\n      </div>\r\n    </Router>\r\n  )\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}