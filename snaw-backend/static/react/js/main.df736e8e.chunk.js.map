{
  "version": 3,
  "sources": [
    "img/AnthroClassifyRainforest.png",
    "img/rainforest_specto.png",
    "img/logo_small.png",
    "img/SmallClassifyRainforest.png",
    "img/ExpandedClassifyRainforest.png",
    "components/AnalyzeButton.js",
    "components/UploadButton.js",
    "App.js",
    "Charts/LineChart.js",
    "Charts/PieChart.js",
    "components/table.js",
    "Charts/VictoryChart.js",
    "Results.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "useStyles",
    "makeStyles",
    "theme",
    "button",
    "color",
    "fontSize",
    "backgroundColor",
    "margin",
    "spacing",
    "paddingLeft",
    "paddingRight",
    "background",
    "UploadButton",
    "classes",
    "htmlFor",
    "to",
    "style",
    "textDecoration",
    "Button",
    "variant",
    "className",
    "input",
    "display",
    "accept",
    "id",
    "multiple",
    "type",
    "component",
    "App",
    "randomNum",
    "Math",
    "floor",
    "random",
    "src",
    "logo",
    "alt",
    "window",
    "token",
    "array",
    "data",
    "time",
    "name",
    "geo",
    "bio",
    "ant",
    "toPercent",
    "decimal",
    "fixed",
    "toFixed",
    "renderTooltipContent",
    "o",
    "payload",
    "label",
    "total",
    "reduce",
    "result",
    "entry",
    "value",
    "map",
    "index",
    "key",
    "getPercent",
    "Example",
    "width",
    "height",
    "stackOffset",
    "top",
    "right",
    "left",
    "bottom",
    "strokeDasharray",
    "dataKey",
    "tickFormatter",
    "content",
    "stackId",
    "stroke",
    "fill",
    "PureComponent",
    "jsfiddleUrl",
    "data01",
    "COLORS",
    "cx",
    "cy",
    "labelLine",
    "outerRadius",
    "length",
    "root",
    "overflowX",
    "table",
    "minWidth",
    "createData",
    "class_name",
    "seconds",
    "percentage",
    "rows",
    "SimpleTable",
    "Paper",
    "Table",
    "aria-label",
    "TableHead",
    "TableRow",
    "TableCell",
    "align",
    "TableBody",
    "row",
    "scope",
    "domainPadding",
    "VictoryTheme",
    "material",
    "dependentAxis",
    "axis",
    "tickFormat",
    "x",
    "independentAxis",
    "y",
    "interpolation",
    "scale",
    "strokeWidth",
    "parent",
    "border",
    "heading",
    "typography",
    "pxToRem",
    "flexBasis",
    "flexShrink",
    "secondaryHeading",
    "palette",
    "text",
    "secondary",
    "Results",
    "React",
    "useState",
    "expanded",
    "setExpanded",
    "handleChange",
    "panel",
    "event",
    "isExpanded",
    "AppBar",
    "position",
    "Toolbar",
    "Typography",
    "title",
    "Container",
    "ExpansionPanel",
    "onChange",
    "ExpansionPanelSummary",
    "expandIcon",
    "aria-controls",
    "ExpansionPanelDetails",
    "CardMedia",
    "image",
    "Spectrogram",
    "Grid",
    "container",
    "item",
    "linechart",
    "piechart",
    "SvmSmallResults",
    "SvmExpandedResults",
    "SvmAnthroResults",
    "SvmGeoResults",
    "Boolean",
    "location",
    "hostname",
    "match",
    "routing",
    "exact",
    "path",
    "ReactDOM",
    "render",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "js/main.df736e8e.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"media/AnthroClassifyRainforest.1f13aa3f.png\";",
    "module.exports = __webpack_public_path__ + \"media/rainforest_specto.17942d01.png\";",
    "module.exports = __webpack_public_path__ + \"media/logo_small.7e1954b4.png\";",
    "module.exports = __webpack_public_path__ + \"media/SmallClassifyRainforest.14444155.png\";",
    "module.exports = __webpack_public_path__ + \"media/ExpandedClassifyRainforest.8090d887.png\";",
    "import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    color: 'white',\r\n    fontSize: '1em',\r\n    backgroundColor: '#3f5a14',\r\n    margin: theme.spacing(1),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n    '&:hover': {\r\n      background: '#2e420e',\r\n   },\r\n  },\r\n}));\r\n\r\nexport default function UploadButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        <label htmlFor=\"outlined-button-file\">\r\n        <Link to=\"/results\" style={{ textDecoration: 'none' }}>\r\n          <Button variant=\"contained\" className={classes.button}>\r\n            Analyze Audio\r\n          </Button>\r\n          </Link>\r\n        </label>\r\n    </div>\r\n  );\r\n}",
    "import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function UploadButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        <input\r\n            accept=\"audio/wav\"\r\n            className={classes.input}\r\n            id=\"outlined-button-file\"\r\n            multiple\r\n            type=\"file\"\r\n        />\r\n        <label htmlFor=\"outlined-button-file\">\r\n            <Button variant=\"outlined\" component=\"span\" className={classes.button}>\r\n              Upload WAV File/s\r\n            </Button>\r\n        </label>\r\n    </div>\r\n  );\r\n}",
    "import React from 'react';\r\nimport logo from './img/logo_small.png';\r\nimport './App.css';\r\nimport AnalyzeButton from './components/AnalyzeButton';\r\nimport UploadButton from './components/UploadButton';\r\n\r\nfunction App() {\r\n\r\n  var randomNum = Math.floor(Math.random() * 5);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        //First we test a string from the flask back-end.\r\n        <p>Token received from Backend = {window.token}</p>\r\n        //We then will test receiving an array from the back-end and display its positions.\r\n        <p>Test information array [1, 2, 3, 4, 5]  at position {randomNum} = {window.array[randomNum]}</p>\r\n        <p>\r\n          <b>Soundscape Noise Analysis Workbench</b>\r\n        </p>\r\n        <br/>\r\n        <div> \r\n          Drag and drop WAV files here, or click the Upload button to select file/s.\r\n          <UploadButton/>\r\n          <br/><br/>\r\n        </div>\r\n        <div> \r\n          <AnalyzeButton/>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",
    "import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, AreaChart, Area\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n      time: '0', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '2', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '4', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '6', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '8', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '10', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '12', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '14', name: 'Cricket', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '16', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '18', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '20', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '22', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '24', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '26', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '28', name: 'Car', geo:0, bio:0, ant:100\r\n  },\r\n  {\r\n      time: '30', name: 'Car', geo:0, bio:0, ant:100\r\n  },\r\n  {\r\n      time: '32', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '34', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '36', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '38', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '40', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n];\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => `${(decimal * 100).toFixed(fixed)}%`;\r\nconst renderTooltipContent = (o) => {\r\n  const { payload, label } = o;\r\n  const total = payload.reduce((result, entry) => (result + entry.value), 0);\r\n\r\n  return (\r\n    <div className=\"customized-tooltip-content\">\r\n      <p className=\"total\">{`${label} (Total: ${total})`}</p>\r\n      <ul className=\"list\">\r\n        {\r\n        \tpayload.map((entry, index) => (\r\n          \t<li key={`item-${index}`} style={{ color: entry.color }}>\r\n            \t{`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n           </li>\r\n        \t))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default class Example extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/zsax2hyq/';\r\n\r\n  render() {\r\n    return (\r\n      <AreaChart\r\n        width={600}\r\n        height={400}\r\n        data={data}\r\n        stackOffset=\"expand\"\r\n        margin={{\r\n          top: 10, right: 30, left: 0, bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"time\" />\r\n        <YAxis tickFormatter={toPercent} />\r\n        <Tooltip content={renderTooltipContent} />\r\n        <Legend />\r\n        <Area type=\"monotone\" dataKey=\"geo\" stackId=\"1\" stroke=\"#037FFC\" fill=\"#037FFC\" />\r\n        <Area type=\"monotone\" dataKey=\"bio\" stackId=\"1\" stroke=\"#5AC733\" fill=\"#5AC733\" />\r\n        <Area type=\"monotone\" dataKey=\"ant\" stackId=\"1\" stroke=\"#FCAD03\" fill=\"#FCAD03\" />\r\n      </AreaChart>\r\n    );\r\n  }\r\n}\r\n",
    "import React, { PureComponent } from 'react';\r\n\r\nimport {\r\n  PieChart, Pie, Legend, Tooltip, Sector, Cell,\r\n} from 'recharts';\r\n\r\nconst data01 = [\r\n  { name: 'Geophony', value: 400 },\r\n  { name: 'Biophony', value: 300 },\r\n  { name: 'Anthrophony', value: 300 },\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nexport default class Example extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/k9jkog04/';\r\n\r\n  render() {\r\n    return (\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={data01}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          label\r\n        >\r\n          {\r\n            data01.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n          }\r\n        </Pie>\r\n        <Tooltip/>\r\n        <Legend/>\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n",
    "import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(class_name, seconds, percentage) {\r\n  return { class_name, seconds, percentage };\r\n}\r\n\r\nconst rows = [\r\n  createData('Geophony', 14, 45),\r\n  createData('Biophony', 12, 45),\r\n  createData('Anthrophony', 4, 10),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Classification Type</TableCell>\r\n            <TableCell align=\"right\">Number of Seconds</TableCell>\r\n            <TableCell align=\"right\">Percentage (%)</TableCell>\r\n      </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.class_name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.class_name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.seconds}</TableCell>\r\n              <TableCell align=\"right\">{row.percentage}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n",
    "import React, { PureComponent }from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { VictoryArea, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory';\r\n\r\nconst data = [\r\n  {\r\n      time: '0', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '2', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '4', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '6', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '8', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '10', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '12', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '14', name: 'Cricket', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '16', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '18', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '20', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '22', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '24', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '26', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '28', name: 'Car', geo:0, bio:0, ant:100\r\n  },\r\n  {\r\n      time: '30', name: 'Car', geo:0, bio:0, ant:100\r\n  },\r\n  {\r\n      time: '32', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '34', name: 'Birds', geo:0, bio:100, ant:0\r\n  },\r\n  {\r\n      time: '36', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '38', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n  {\r\n      time: '40', name: 'Rain', geo:100, bio:0, ant:0\r\n  },\r\n];\r\n\r\nconst data02 = [\r\n    {quarter: 1, earnings: 13000},\r\n    {quarter: 2, earnings: 16500},\r\n    {quarter: 3, earnings: 14250},\r\n    {quarter: 4, earnings: 19000}\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h1>Victory Tutorial</h1>\r\n            <VictoryChart\r\n                domainPadding={10}\r\n                theme={VictoryTheme.material}\r\n            >\r\n                <VictoryAxis dependentAxis\r\n                                  style={{ axis: { stroke: \"none\" } }}\r\n                                  tickFormat={(x) => `t:${x}`}\r\n                />\r\n                <VictoryAxis independentAxis\r\n                                  style={{ axis: { stroke: \"none\" } }}\r\n                                  tickFormat={(x) => `%${x}`}\r\n                />\r\n                <VictoryArea\r\n                    data={data}\r\n                    x={\"time\"}\r\n                    y={\"geo\"}\r\n                    interpolation=\"stepAfter\"\r\n                    scale={{x: \"time\", y: \"linear\"}}\r\n                    style={{ data: { fill : \"#39a1bd\", stroke: \"#25687a\", strokeWidth: 1 },\r\n                             parent: { border: \"1px solid #ccc\"}}}\r\n                />\r\n            </VictoryChart>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n",
    "import React from 'react';\r\nimport SvmSmallResults from './img/SmallClassifyRainforest.png';\r\nimport SvmExpandedResults from './img/ExpandedClassifyRainforest.png';\r\nimport SvmAnthroResults from './img/AnthroClassifyRainforest.png';\r\nimport SvmGeoResults from './img/AnthroClassifyRainforest.png';\r\nimport Spectrogram from './img/rainforest_specto.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LineChart from './Charts/LineChart';\r\nimport PieChart from './Charts/PieChart';\r\nimport SimpleTable from \"./components/table\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VictoryChart from \"./Charts/VictoryChart\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Results() {\r\nconst classes = useStyles();\r\nconst [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\nreturn (\r\n<div className=\"App\">\r\n    <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <Typography variant='h6' className={classes.title}>Soundscape Noise Analysis Workbench</Typography>\r\n        </Toolbar>\r\n    </AppBar>\r\n\r\n    <Container>\r\n        <br/>\r\n        <Typography variant=\"h3\" component=\"h1\">Results of Analysis</Typography>\r\n        <br/>\r\n        <Container fixed>\r\n            <ExpansionPanel expanded={expanded === 'panel0'} onChange={handleChange('panel0')}>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Typography className={classes.heading}>Results of</Typography>\r\n                    <Typography className={classes.secondaryHeading}>rainforest-sc.wav</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                        <Paper>\r\n                            <VictoryChart/>\r\n                        </Paper>\r\n                        <Paper>\r\n                            <Typography variant='subtitle1'>Spectrogram</Typography>\r\n                            <CardMedia component='img' image={Spectrogram} className=\"classes.media\"/>\r\n                        </Paper>\r\n                        <br/>\r\n                        <Typography variant='subtitle1'>Results of SVM Small Class</Typography>\r\n                        <br/>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item linechart>\r\n                                <Paper><LineChart/></Paper>\r\n                            </Grid>\r\n                            <Grid item piechart>\r\n                                <Paper><PieChart/></Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br/>\r\n                        <SimpleTable/>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <ExpansionPanel expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\">\r\n                    <Typography className={classes.heading}>Results of</Typography>\r\n                    <Typography className={classes.secondaryHeading}>nature-sc.wav</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Container>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>Spectrogram</Typography>\r\n                        <CardMedia component='img' image={Spectrogram} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Small Class</Typography>\r\n                        <CardMedia component='img' image={SvmSmallResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Expanded Class</Typography>\r\n                        <CardMedia component='img' image={SvmExpandedResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from an Extended 28 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Anthrophony Binary Class</Typography>\r\n                        <CardMedia component='img' image={SvmAnthroResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    <br/>\r\n                    <Paper>\r\n                        <Typography variant='subtitle1'>SVM Geophony Binary Class</Typography>\r\n                        <CardMedia component='img' image={SvmGeoResults} className=\"classes.media\" alt=\"svmSmallResults\" />\r\n                        <Typography>\r\n                        Classified from a small 20 category Support Vector Machine model trained using Open Source audio data sets.\r\n                        </Typography>\r\n                    </Paper>\r\n                    </Container>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Container>\r\n    </Container>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Results;\r\n",
    "// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Results from './Results';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst routing = (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route exact path=\"/results\" component={Results} />\r\n      </div>\r\n    </Router>\r\n  )\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"
  ],
  "sourceRoot": ""
}